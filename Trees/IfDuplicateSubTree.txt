Given a binary tree, find out whether it contains a duplicate sub-tree of size two or more, or not.

class Solution {
  public:
    /*This function returns true if the tree contains 
    a duplicate subtree of size 2 or more else returns false*/
    string solve(Node *root, unordered_set<string> &hash, bool &ans){
        if(! root) return "";
        if(! root->left && ! root->right) return to_string(root->data);
        string left = solve(root->left,hash,ans);
        string right = solve(root->right,hash,ans);
        string curr = left + to_string(root->data) + right;
        if(hash.find(curr) != hash.end()) ans = true;
        hash.insert(curr);
        return curr;
    }
    int dupSub(Node *root) {
         // code here
         unordered_set<string> hash;
         bool ans = false;
         solve(root, hash, ans);
         return (ans)?true:false;
         return 0;
    }
};