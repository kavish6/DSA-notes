Given a Binary Tree, print the diagonal traversal of the binary tree.

Consider lines of slope -1 passing between nodes. Given a Binary Tree, print all diagonal elements in a binary tree belonging to same line.
//basically assigning nodes with intercept of their starting point.
//another approach is to keep traversing right and store the left nodes in queue.
void diagonalutil(Node *root,map<int,vector<int>> &diag,int d)
{
    if(root==NULL)
    return;
    diag[d].push_back(root->data);
    if(root->left)
    diagonalutil(root->left,diag,d+1);
    if(root->right)
    diagonalutil(root->right,diag,d);
}
vector<int> diagonal(Node *root)
{
   // your code here
   vector<int> res;
   map<int,vector<int>> diag;
   diagonalutil(root,diag,0);
   for(auto it:diag)
   {
       vector<int> t=it.second;
       for(int i=0;i<t.size();i++)
       {
           res.push_back(t[i]);
       }
   }
   return res;
}