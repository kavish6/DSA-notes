Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string.




LOGIC: iterate i over string and take each i as midpoint of a string and expand it left and right if the end and start are equal this gives odd length substrings so use i and i+1 and then expand for even length ones.



class Solution {
public:
    int countSubstrings(string s) {
        int ans=0,n=s.size();
        for(int i=0;i<n;i++)
        {
            int j=i,k=i;
            while(j>=0&&k<n&&s[j]==s[k])
            {
                ans++;
                j--;
                k++;
            }
            j=i,k=i+1;
            while(j>=0&&k<n&&s[j]==s[k])
            {
                ans++;
                j--;
                k++;
            }
        }
        return ans;
    }
};
