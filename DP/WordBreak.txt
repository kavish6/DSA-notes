Given a string A and a dictionary of n words B, find out if A can be segmented into a space-separated sequence of dictionary words.

Note: From the dictionary B each word can be taken any number of times and in any order.


bool CanParseUtil(unordered_map<string, bool>mp, string word)
{
    // if the size id zero that means we completed the word. so we can return true
    int size = word.size();
    if(size == 0)
    {
        return true;
    }
    string temp = "";
    for(int i = 0; i < word.length(); i++)
    {
        temp += word[i];
        // if the temp exist in hashmap and the parsing operation of the remaining word is true, we can return true.
        if(mp.find(temp) != mp.end() && CanParseUtil(mp, word.substr(i+1)))
        {
            return true;
        }
    }
    // if there is a mismatch in the dictionary, we can return false.
    return false;
}
    int wordBreak(string A, vector<string> &B) {
        //code here
    
        unordered_map<string, bool>mp;
    for(auto it : B)
    {
        mp[it] = true;
    }
    return CanParseUtil(mp,A ) == true ? 1 : 0;
    }
