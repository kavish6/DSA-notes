Given a sorted array arr containing n elements with possibly duplicate elements, the task is to find indexes of first and last occurrences of an element x in the given array.


vector<int> find(int arr[], int n , int x )
{
    // code here
    vector<int> ans;
    int low=0,high=n-1;
    while(high>=low)
    {
        int mid=(((high-low)/2)+low);
        if((mid==0||arr[mid-1]<x)&&arr[mid]==x){
        ans.push_back(mid);
        break;
        }
        else if(arr[mid]<x)
        low=mid+1;
        else
        high=mid-1;
    }
    low=0,high=n-1;
    while(high>=low)
    {
        int mid=(((high-low)/2)+low);
        if((mid==n-1||arr[mid+1]>x)&&arr[mid]==x){
        ans.push_back(mid);
        break;
        }
        else if(arr[mid]>x)
        high=mid-1;
        else
        low=mid+1;
    }
    if(ans.size()<2)
    {
    ans.push_back(-1);
    ans.push_back(-1);
    }
    return ans;
}