Given a row wise sorted matrix of size RxC where R and C are always odd, find the median of the matrix.

class Solution{   
public:
    int indmedian(vector<int> a,int n)
    {   
        if(n==0)
        return (a[n/2]+a[(n/2)-1])/2;
        return a[n/2];
    }
    int median(vector<vector<int>> &matrix, int r, int c){
        // code here
        int max=0;
        int min=INT_MAX;
        for(int i=0;i<r;i++)
        {
            if(matrix[i][0]<min)
            min=matrix[i][0];
            if(matrix[i][c-1]>max)
            max=matrix[i][c-1];
        }
        while(min<max)
        {
            int mid=min+(max-min)/2;
            int count=0;
            int req=(r*c+1)/2;
            for(int i=0;i<r;i++)
            count+=upper_bound(matrix[i].begin(),matrix[i].begin()+c,mid)-matrix[i].begin();
            if(count<req)
            min=mid+1;
            else
            max=mid;
        }
        return min;
    }
};