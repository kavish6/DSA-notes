Given a string s, rearrange the characters of s so that any two adjacent characters are not the same.

Return any possible rearrangement of s or return "" if not possible.


class Solution {
public:
    string reorganizeString(string s) {
        map<char,int> mp;
        for(auto &i:s)
        {
            mp[i]++;
        }
        priority_queue<pair<int,char>> pq;
        for(auto &it:mp)
            pq.push({it.second,it.first});
        string ans="";
        while(pq.size()>1)
        {
            char t1=pq.top().second;
            pq.pop();
            char t2=pq.top().second;
            pq.pop();
            ans+=t1;
            ans+=t2;
            if(mp[t1]-1>0)
            {
                mp[t1]--;
                pq.push({mp[t1],t1});
            }
            if(mp[t2]-1>0)
            {
                mp[t2]--;
                pq.push({mp[t2],t2});
            }
        }
        if(!pq.empty())
        {
            char c=pq.top().second;
            if(pq.top().first>1)
                return "";
            else
                ans+=c;
        }
        
        return ans;
    }
};
